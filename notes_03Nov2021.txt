Tree
-----
	Terminology/ terms used in the tree datastructure

		root
			top most node in tree. Does not have parent. There may be child elements. 
			root is the first node which is added (normally). Unless there was rotation
			if root is null, then the tree is empty.

		node	
			node is the element. root is called as root node.
	
		edge
			the path between two nodes is an edge. There is a path to traverse. 
			if there are 2 nodes, then there is 1 edge.
			if there are n nodes, then there are n-1 edges.

		siblings
			sibling is relative to another node. A and B are sibling, if both are children of same parent node
			
		parent
			if a node contains atleast 1 child, then the node is the parent for the child(ren)

		leaf node
			the node that do not have child(ren). Last node in a way

		internal nodes
			the nodes that have both parent and child(ren)

		ancestor nodes
			is the predecessor of any node during traversal

		descendant
			is the successor in traversal

		dept of the node
			how many edges to reach the node from the root is the depth of the node.
			root node is in 0 depth.

		height of the node
			how many levels are there in a tree. consider the root node is at level 0.


	in in-order traversal, the ancestor may be different
	in post-order and pre-order traversal, the ancestory may be different
	
	the ancestor may not always be the parent


While travesing (means, visiting all the nodes), what is 
in order
pre order
post order


In Order
---------
	left -> root -> right

		in this order, we visit every node




1	3	4	6	7	8	10	13	14



Pre Order
---------
	root -> left -> right

8	3	1	6	4	7	10	14	13



Post Order
----------
	left -> right -> root

1	4	7	6	3	13	14	10	8


==================================================
Have we ever used trees in our java programming so far?

	we have used. During collections chapter.
		TreeSet
		TreeMap

	These collections store the elements/nodes in a tree structure. and do in order traversal so that we get the
		elements in ascending order based on comparable or comparator


If you  notice all these data structures be an array or linkedlist or stack or queue or tree,
	in all these, we have only 1 node in our control.

	Array
		array name is the pointer/ reference to the first element of the array
	LinkedList
		the variable name has reference to the start node
	Stack
		ref to the Top
	Tree
		ref to the root node

using that one node, we are able to access any other node. 

======================================================
Graph
-----

Graph has Vertex and Edge

Between vertices, there can be edges

Edges provide a route or path between the vertices



Activity:
---------
Understand the Datastructures (Tree & Map) and their terminologies and operations.
Share the observations on Graph.
